"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os

# Load environment variables from a .env file
from dotenv import load_dotenv; load_dotenv()

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%d8n4v5$+6)s_fxv^oo5j$owjpseidpwa(z!(-x#bsntkbgo^6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = os.getenv('ALLOWED_ORIGINS', 'localhost').split(',')
ALLOWED_HOSTS += ['localhost', '127.0.0.1', '0.0.0.0']
ALLOWED_HOSTS = list(set(ALLOWED_HOSTS))  # Ensure no duplicates if 'localhost' is in ALLOWED_ORIGINS

# Application definition

INSTALLED_APPS = [
    'rest_framework',    # This tells django to use djangorestframework
    'reading_materials', # This tells django to use the reading_materials API
    'reviews',           # This tells django to use the reviews API
    'corsheaders',       # This tells django to use the cors settings (security)
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # this makes the cors package run for all requests.  A bit like app.use() in express
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':          os.environ.get("DATABASE_ENGINE", "django.db.backends.sqlite3"), # Try to get from .env or use default value of "django.db.backends.sqlite3"
        'NAME':            os.environ.get("DATABASE_NAME", BASE_DIR / "db.sqlite3"),        # Try to get from .env or use default value of "db.sqlite3"
        'USER':            os.environ.get("DATABASE_USER", ""),                             # Try to get from .env or leave blank
        'PASSWORD':        os.environ.get("DATABASE_PASSWORD", ""),                         # Try to get from .env or leave blank
        'PORT':            os.environ.get("DATABASE_PORT", ""),                             # Try to get from .env or leave blank
        'HOST':            os.environ.get("DATABASE_HOST", "localhost"),                    # Try to get from .env or leave as "localhost"
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'